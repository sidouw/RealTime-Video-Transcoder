{"version":3,"sources":["components/Video.js","components/Controls.js","components/VideoPlayerModal.js","components/Header.js","components/VideosPage.js","components/AuthPage.js","router/AppRouter.js","index.js"],"names":["Video","metadata","onClicked","className","onClick","name","alt","src","thumbnailPath","duration","useStyles","makeStyles","theme","controlsWrapper","visibility","position","top","left","right","bottom","height","background","display","flexDirection","justifyContent","button","margin","spacing","controlIcons","color","fontSize","transform","bottomIcons","volumeSlider","width","PrettoSlider","withStyles","root","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","track","borderRadius","rail","Slider","ValueLabelComponent","props","children","open","value","Tooltip","enterTouchDelay","placement","title","Controls","forwardRef","ref","onSeek","onSeekMouseDown","onSeekMouseUp","onRewind","onPlayPause","onFastForward","playing","played","elapsedTime","totalDuration","onMute","muted","onVolumeSeekDown","onChangeDispayFormat","playbackRate","onPlaybackRateChange","onToggleFullScreen","volume","onVolumeChange","onAddSubtitle","onOffsetSub","OffsetSub","audioTracks","onAudioTrackChange","classes","useState","anchorEl","setAnchorEl","anchorSub","setAnchorSub","anchoraudio","setAnchorAudio","handleClose","Boolean","openSubPop","openaudioPop","id","undefined","Grid","container","direction","justify","style","flexGrow","alignItems","padding","item","Typography","variant","onChange","type","Button","event","currentTarget","startIcon","Popover","current","onClose","anchorOrigin","vertical","horizontal","transformOrigin","document","getElementById","click","Input","placeholder","IconButton","aria-label","xs","min","max","onMouseDown","onChangeCommitted","volumeButton","aria-labelledby","aria-describedby","map","index","rate","playerWrapper","topControls","middleControls","bottomWrapper","bottomControls","format","seconds","isNaN","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","toString","padStart","count","VideoPlayer","setOpened","opened","currentlyPlaying","currentMetadata","seekTime","setsSeekTime","timeDisplayFormat","setTimeDisplayFormat","setPlaying","setMuted","setPlayed","setPlaybackRate","setVolume","subOffset","setSubOffset","audioTrack","setAudioTrack","seeking","setSeeking","playerRef","useRef","playerContainerRef","controlsRef","useEffect","currentTime","getCurrentTime","overlayClassName","isOpen","onRequestClose","appElement","closeTimeoutMS","onMouseMove","onMouseLeave","url","controls","light","loop","onProgress","changeState","playedSeconds","parseFloat","e","newValue","parseInt","newTime","file","target","files","reader","FileReader","readAsText","onloadend","axios","post","sub","result","then","data","console","log","catch","screenful","toggle","Header","VideosPage","metaData","setMetaData","playerOpened","setPlayerOpened","setCurrentlyPlaying","setCurrentMetadata","get","response","success","error","sortedData","sort","a","b","nameA","toUpperCase","nameB","err","videoClicked","T","find","element","encodeURIComponent","meta","VideoPlayerModal","AuthPage","setAuthed","onSubmit","preventDefault","passworrd","alert","App","authed","password","ReactDOM","render","StrictMode","AppRouter"],"mappings":"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","file":"static/js/main.b44b7014.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\n\r\nconst Video = ({metadata,onClicked})=>{\r\n\r\n    return (\r\n        <div className = 'videoThumbnail' onClick = {()=>onClicked(metadata.name)}>\r\n            <img alt ='thumbnail' src = {metadata.thumbnailPath}/>\r\n            <span className = 'videoThumbnail__duration'>{ ~~((metadata.duration % 3600) / 60)}:{~~metadata.duration % 60}</span>\r\n            <p >{metadata.name}</p>\r\n        </div> \r\n    )\r\n}\r\nexport default Video","import React, { forwardRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from '@material-ui/core/Input'\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport FastRewindIcon from \"@material-ui/icons/FastRewind\";\r\nimport FastForwardIcon from \"@material-ui/icons/FastForward\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport VolumeUp from \"@material-ui/icons/VolumeUp\";\r\nimport VolumeDown from \"@material-ui/icons/VolumeDown\";\r\nimport VolumeMute from \"@material-ui/icons/VolumeOff\";\r\nimport FullScreen from \"@material-ui/icons/Fullscreen\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  controlsWrapper: {\r\n    visibility: \"hidden\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    height: \"100%\",\r\n    background: \"rgba(0,0,0,0.6)\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  controlIcons: {\r\n    color: \"#777\",\r\n\r\n    fontSize: 50,\r\n    transform: \"scale(0.9)\",\r\n    \"&:hover\": {\r\n      color: \"#fff\",\r\n      transform: \"scale(1)\",\r\n    },\r\n  },\r\n\r\n  bottomIcons: {\r\n    color: \"#999\",\r\n    \"&:hover\": {\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n\r\n  volumeSlider: {\r\n    width: 100,\r\n  },\r\n}));\r\n\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: \"#fff\",\r\n    border: \"2px solid currentColor\",\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    \"&:focus, &:hover, &$active\": {\r\n      boxShadow: \"inherit\",\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: \"calc(-50% + 4px)\",\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n\r\nfunction ValueLabelComponent(props) {\r\n  const { children, open, value } = props;\r\n  return (\r\n    <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n      {children}\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nconst Controls = forwardRef(\r\n  (\r\n    {\r\n      onSeek,\r\n      onSeekMouseDown,\r\n      onSeekMouseUp,\r\n      onRewind,\r\n      onPlayPause,\r\n      onFastForward,\r\n      playing,\r\n      played,\r\n      elapsedTime,\r\n      totalDuration,\r\n      onMute,\r\n      muted,\r\n      onVolumeSeekDown,\r\n      onChangeDispayFormat,\r\n      playbackRate,\r\n      onPlaybackRateChange,\r\n      onToggleFullScreen,\r\n      volume,\r\n      onVolumeChange,\r\n      onAddSubtitle,\r\n      onOffsetSub,\r\n      OffsetSub,\r\n      title,\r\n      audioTracks,\r\n      onAudioTrackChange\r\n    },\r\n    ref\r\n  ) => {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [anchorSub, setAnchorSub] = useState(null);\r\n    const [anchoraudio, setAnchorAudio] = useState(null);\r\n    const handlePlayRate = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleSubtitles = (event) => {\r\n      setAnchorSub(event.currentTarget);\r\n    };\r\n    const handleAudio = (event) => {\r\n      setAnchorAudio(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n      setAnchorSub(null);\r\n      setAnchorAudio(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const openSubPop = Boolean(anchorSub);\r\n    const openaudioPop = Boolean(anchoraudio);\r\n    const id = open ? \"simple-popover\" : undefined;\r\n\r\n    return (\r\n      <div ref={ref} className={classes.controlsWrapper}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-between\"\r\n          style={{ flexGrow: 1 }}\r\n        >\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"space-between\"\r\n            style={{ padding: 16 }}\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h5\" style={{ color: \"#fff\" }}>\r\n                {title}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <input id='subtitle-input' onChange={onAddSubtitle} type ='file' style= {{display:'none'}}  />\r\n              <Button\r\n                onClick={handleSubtitles /**/}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<BookmarkIcon />}\r\n              >\r\n                Subtitles\r\n              </Button> \r\n              <Popover\r\n                container={ref.current}\r\n                open={openSubPop}\r\n                // id={id}\r\n                onClose={handleClose}\r\n                anchorEl={anchorSub}\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"center\",\r\n                }}\r\n                transformOrigin = {{\r\n                  horizontal:'center'\r\n                }}\r\n                \r\n              >\r\n                <Grid container direction=\"column\">\r\n                    <Button\r\n                      onClick={()=>document.getElementById('subtitle-input').click()}\r\n                      variant=\"text\"\r\n                    >\r\n                    <Typography variant=\"h8\" style={{ color: \"#000\" }}>\r\n                    Add Subtitle\r\n                  </Typography>\r\n                    </Button>\r\n                    <Input placeholder='Offset' value={OffsetSub} onChange={onOffsetSub} type='Number' style= {{width:'130px'}} />\r\n                </Grid>\r\n              </Popover>\r\n            \r\n            </Grid>\r\n          </Grid>\r\n          <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n            <IconButton\r\n              onClick={onRewind}\r\n              className={classes.controlIcons}\r\n              aria-label=\"rewind\"\r\n            >\r\n              <FastRewindIcon\r\n                className={classes.controlIcons}\r\n                fontSize=\"inherit\"\r\n              />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={onPlayPause}\r\n              className={classes.controlIcons}\r\n              aria-label=\"play\"\r\n            >\r\n              {playing ? (\r\n                <PauseIcon fontSize=\"inherit\" />\r\n              ) : (\r\n                <PlayArrowIcon fontSize=\"inherit\" />\r\n              )}\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={onFastForward}\r\n              className={classes.controlIcons}\r\n              aria-label=\"forward\"\r\n            >\r\n              <FastForwardIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          </Grid>\r\n          {/* bottom controls */}\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n            style={{ padding: 16 }}\r\n          >\r\n            <Grid item xs={12}>\r\n              <PrettoSlider\r\n                min={0}\r\n                max={100}\r\n                ValueLabelComponent={(props) => (\r\n                  <ValueLabelComponent {...props} value={elapsedTime} />\r\n                )}\r\n                aria-label=\"custom thumb label\"\r\n                value={played * 100}\r\n                onChange={onSeek}\r\n                onMouseDown={onSeekMouseDown}\r\n                onChangeCommitted={onSeekMouseUp}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Grid container alignItems=\"center\">\r\n                <IconButton\r\n                  onClick={onMute}\r\n                  className={`${classes.bottomIcons} ${classes.volumeButton}`}\r\n                >\r\n                  {muted ? (\r\n                    <VolumeMute fontSize=\"large\" />\r\n                  ) : volume > 0.5 ? (\r\n                    <VolumeUp fontSize=\"large\" />\r\n                  ) : (\r\n                    <VolumeDown fontSize=\"large\" />\r\n                  )}\r\n                </IconButton>\r\n\r\n                <Slider\r\n                  min={0}\r\n                  max={100}\r\n                  value={muted ? 0 : volume * 100}\r\n                  onChange={onVolumeChange}\r\n                  aria-labelledby=\"input-slider\"\r\n                  className={classes.volumeSlider}\r\n                  onMouseDown={onSeekMouseDown}\r\n                  onChangeCommitted={onVolumeSeekDown}\r\n                />\r\n                <Button\r\n                  variant=\"text\"\r\n                  onClick={\r\n                    onChangeDispayFormat\r\n                  }\r\n                >\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    style={{ color: \"#fff\", marginLeft: 16 }}\r\n                  >\r\n                    {elapsedTime}/{totalDuration}\r\n                  </Typography>\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n\r\n              <Button\r\n                onClick={handleAudio}\r\n                aria-describedby={id}\r\n                className={classes.bottomIcons}\r\n                variant=\"text\"\r\n              >\r\n                <Typography>audio</Typography>\r\n              </Button>\r\n\r\n              <Popover\r\n                container={ref.current}\r\n                open={openaudioPop}\r\n                id={id}\r\n                onClose={handleClose}\r\n                anchorEl={anchoraudio}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"center\",\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"center\",\r\n                }}\r\n              >\r\n                <Grid container direction=\"column-reverse\">\r\n                  {audioTracks.map((track,index) => (\r\n                    <Button\r\n                      key={track}\r\n                      //   onClick={() => setState({ ...state, playbackRate: rate })}\r\n                      onClick={() => onAudioTrackChange(index)}\r\n                      variant=\"text\"\r\n                    >\r\n                        {track}\r\n                    </Button>\r\n                  ))}\r\n                </Grid>\r\n              </Popover>\r\n\r\n              {/* ******************************** */}\r\n              <Button\r\n                onClick={handlePlayRate}\r\n                aria-describedby={id}\r\n                className={classes.bottomIcons}\r\n                variant=\"text\"\r\n              >\r\n                <Typography>{playbackRate}X</Typography>\r\n              </Button>\r\n\r\n              <Popover\r\n                container={ref.current}\r\n                open={open}\r\n                id={id}\r\n                onClose={handleClose}\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"left\",\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"left\",\r\n                }}\r\n              >\r\n                <Grid container direction=\"column-reverse\">\r\n                  {[0.5, 1, 1.5, 2].map((rate) => (\r\n                    <Button\r\n                      key={rate}\r\n                      //   onClick={() => setState({ ...state, playbackRate: rate })}\r\n                      onClick={() => onPlaybackRateChange(rate)}\r\n                      variant=\"text\"\r\n                    >\r\n                      <Typography\r\n                        color={rate === playbackRate ? \"secondary\" : \"inherit\"}\r\n                      >\r\n                        {rate}X\r\n                      </Typography>\r\n                    </Button>\r\n                  ))}\r\n                </Grid>\r\n              </Popover>\r\n               {/* ******************************** */}                          \r\n              <IconButton\r\n                onClick={onToggleFullScreen}\r\n                className={classes.bottomIcons}\r\n              >\r\n                <FullScreen fontSize=\"large\" />\r\n              </IconButton>\r\n            \r\n              </Grid>\r\n                       \r\n                  {/* ******************************** */}\r\n            </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nControls.propTypes = {\r\n  onSeek: PropTypes.func,\r\n  onSeekMouseDown: PropTypes.func,\r\n  onSeekMouseUp: PropTypes.func,\r\n  onAddSubtitle: PropTypes.func,\r\n  onOffsetSub: PropTypes.func,\r\n  onAudioTrackChange: PropTypes.func,\r\n  onRewind: PropTypes.func,\r\n  onPlayPause: PropTypes.func,\r\n  onFastForward: PropTypes.func,\r\n  onVolumeSeekDown: PropTypes.func,\r\n  onChangeDispayFormat: PropTypes.func,\r\n  onPlaybackRateChange: PropTypes.func,\r\n  onToggleFullScreen: PropTypes.func,\r\n  onMute: PropTypes.func,\r\n  playing: PropTypes.bool,\r\n  played: PropTypes.number,\r\n  OffsetSub: PropTypes.number,\r\n  elapsedTime: PropTypes.string,\r\n  audioTracks: PropTypes.array,\r\n  totalDuration: PropTypes.string,\r\n  muted: PropTypes.bool,\r\n  playbackRate: PropTypes.number,\r\n};\r\nexport default Controls;\r\n","import React,{ useState,useRef,useEffect } from 'react';\r\nimport ReactPlayer from 'react-player'\r\nimport Modal from 'react-modal' \r\nimport { makeStyles} from \"@material-ui/core/styles\";\r\nimport screenful from \"screenfull\";\r\nimport Controls from './Controls'\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    playerWrapper: {\r\n      width: \"100%\",\r\n      position: \"relative\",\r\n    },\r\n  \r\n    controlsWrapper: {\r\n      visibility: \"hidden\",\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      background: \"rgba(0,0,0,0.4)\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    topControls: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-end\",\r\n      padding: theme.spacing(2),\r\n    },\r\n    middleControls: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    bottomWrapper: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n  \r\n      // background: \"rgba(0,0,0,0.6)\",\r\n      // height: 60,\r\n      padding: theme.spacing(2),\r\n    },\r\n  \r\n    bottomControls: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-between\",\r\n      // height:40,\r\n    },\r\n  \r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    controlIcons: {\r\n      color: \"#777\",\r\n  \r\n      fontSize: 50,\r\n      transform: \"scale(0.9)\",\r\n      \"&:hover\": {\r\n        color: \"#fff\",\r\n        transform: \"scale(1)\",\r\n      },\r\n    },\r\n  \r\n    bottomIcons: {\r\n      color: \"#999\",\r\n      \"&:hover\": {\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n  \r\n    volumeSlider: {\r\n      width: 100,\r\n    },\r\n  }));\r\n\r\n  \r\n  const format = (seconds) => {\r\n    if (isNaN(seconds)) {\r\n      return `00:00`;\r\n    }\r\n    const date = new Date(seconds * 1000);\r\n    const hh = date.getUTCHours();\r\n    const mm = date.getUTCMinutes();\r\n    const ss = date.getUTCSeconds().toString().padStart(2, \"0\");\r\n    if (hh) {\r\n      return `${hh}:${mm.toString().padStart(2, \"0\")}:${ss}`;\r\n    }\r\n    return `${mm}:${ss}`;\r\n  };\r\n\r\n  let count = 0;\r\nconst VideoPlayer = ({setOpened,opened,currentlyPlaying,currentMetadata})=>{\r\n\r\n    const classes = useStyles()\r\n\r\n    const [seekTime,setsSeekTime] = useState(0)   \r\n    const [timeDisplayFormat, setTimeDisplayFormat] = useState(\"normal\")\r\n    const [playing, setPlaying] = useState(true)\r\n    const [muted, setMuted] = useState(false)\r\n    const [played, setPlayed] = useState(0)\r\n    // const [subtitle, setSubtitle] = useState('')\r\n    const [playbackRate, setPlaybackRate] = useState(1.0)\r\n    const [volume, setVolume] = useState(1)\r\n    const [subOffset, setSubOffset] = useState(0)\r\n    const [audioTrack, setAudioTrack] = useState(0)\r\n    const [seeking, setSeeking] = useState(false)\r\n\r\n\r\n    const playerRef = useRef(null);\r\n    const playerContainerRef = useRef(null);\r\n    const controlsRef = useRef(null);\r\n\r\n    \r\n  useEffect(()=>{\r\n    setsSeekTime(0)\r\n    setPlayed(0)\r\n  },[currentlyPlaying])\r\n\r\n    const handlePlayPause = () => {\r\n      setPlaying(!playing)\r\n\r\n    };\r\n  \r\n    const handleRewind = () => {\r\n      const newTime = (played*parseFloat(currentMetadata.duration))-10\r\n      setsSeekTime(newTime)\r\n      setPlayed(newTime)\r\n    };\r\n  \r\n    const handleFastForward = () => {    \r\n        const newTime = (played*parseFloat(currentMetadata.duration))+10\r\n        setsSeekTime(newTime)\r\n        setPlayed(newTime)\r\n    };\r\n  \r\n    const handleProgress = (changeState) => {\r\n      if (count > 3) {\r\n        controlsRef.current.style.visibility = \"hidden\";\r\n        count = 0;\r\n      }\r\n      if (controlsRef.current.style.visibility === \"visible\") {\r\n        count += 1;\r\n      }\r\n      if (!seeking) {\r\n        setPlayed((changeState.playedSeconds+seekTime)/parseFloat(currentMetadata.duration))\r\n\r\n      }\r\n    };\r\n  \r\n    const handleSeekChange = (e, newValue) => {\r\n      setPlayed(parseFloat(newValue / 100))\r\n\r\n    };\r\n  \r\n    const handleSeekMouseDown = (e) => {\r\n      setSeeking(true)\r\n    };\r\n  \r\n    const handleSeekMouseUp = (e, newValue) => {\r\n      \r\n      setsSeekTime(parseInt(currentMetadata.duration*(newValue/100)))\r\n      setSeeking(false)\r\n    };\r\n\r\n    const handleVolumeSeekDown = (e, newValue) => {\r\n      setSeeking(false)\r\n      setVolume(parseFloat(newValue / 100))\r\n\r\n    };\r\n    const handleVolumeChange = (e, newValue) => {\r\n      setVolume(parseFloat(newValue / 100))\r\n      setMuted(newValue === 0 ? true : false)\r\n\r\n    }\r\n  \r\n    const toggleFullScreen = () => {\r\n      screenful.toggle(playerContainerRef.current);\r\n    };\r\n  \r\n    const handleMouseMove = () => {\r\n      controlsRef.current.style.visibility = \"visible\";\r\n      count = 0;\r\n    };\r\n  \r\n    const hanldeMouseLeave = () => {\r\n      controlsRef.current.style.visibility = \"hidden\";\r\n      count = 0;\r\n    };\r\n  \r\n    const handleDisplayFormat = () => {\r\n      setTimeDisplayFormat(\r\n        timeDisplayFormat === \"normal\" ? \"remaining\" : \"normal\"\r\n      );\r\n    };\r\n  \r\n    const handlePlaybackRate = (rate) => {\r\n      setPlaybackRate(rate)\r\n    };  \r\n    const handleAudioTrack = (track=0) => {\r\n      setAudioTrack(track)\r\n      setsSeekTime(played*parseFloat(currentMetadata.duration)-1)\r\n    };\r\n  \r\n    const hanldeMute = () => {\r\n      setMuted(!muted)\r\n    };\r\n  \r\n    const onAddSubtitle = (e)=>{\r\n      // playerRef.current.getInternalPlayer().id=\"myPlayer\"\r\n      const file = e.target.files[0]; \r\n      const reader = new FileReader();\r\n      reader.readAsText(file)\r\n        reader.onloadend = ()=>{\r\n          axios.post('video/subs',{sub:reader.result,name:currentMetadata.name}).then((data)=>{\r\n                console.log(data.data);\r\n                setsSeekTime(played*parseFloat(currentMetadata.duration)-1)\r\n        }).catch(()=>{\r\n\r\n        })\r\n      \r\n        }\r\n      \r\n    }\r\n    const onOffsetSub = (e)=>{\r\n      setsSeekTime(played*parseFloat(currentMetadata.duration)-1)\r\n      setSubOffset(e.target.value)\r\n    }\r\n    \r\n    const currentTime =\r\n      playerRef && playerRef.current\r\n        ? playerRef.current.getCurrentTime()+seekTime\r\n        : \"00:00\";\r\n  \r\n\r\n    const duration = currentMetadata ? currentMetadata.duration : \"00:00\";\r\n    \r\n    const elapsedTime =\r\n      timeDisplayFormat === \"normal\"\r\n        ? format(currentTime)\r\n        : `-${format(duration - currentTime)}`;\r\n  \r\n    const totalDuration = format(duration);\r\n\r\n    \r\n    return (\r\n        <Modal\r\n        className = 'player-modal'\r\n        overlayClassName=\"modal-Overlay\"\r\n        isOpen ={opened}\r\n        onRequestClose = {()=>setOpened(!opened)}\r\n        appElement={document.getElementById('root')}\r\n        closeTimeoutMS ={200}\r\n        >   \r\n        <div\r\n        onMouseMove={handleMouseMove}\r\n        onMouseLeave={hanldeMouseLeave}\r\n        ref={playerContainerRef}\r\n        className={classes.playerWrapper}\r\n      >\r\n        <ReactPlayer\r\n          ref={playerRef}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          url={`/video/video?seek=${seekTime}&play=${currentlyPlaying}&subOffset=${subOffset}&audioTrack=${audioTrack}`} \r\n          playing={playing}\r\n          controls={false}\r\n          light={false}\r\n          loop={false}\r\n          playbackRate={playbackRate}\r\n          volume={volume}\r\n          muted={muted}\r\n          onProgress={handleProgress}\r\n          // config={{\r\n          //   file: {\r\n          //     attributes: {\r\n          //       crossOrigin: \"anonymous\",\r\n          //     },\r\n          //     tracks: [\r\n          //       {kind: 'subtitles', src:subtitle, srcLang: 'en', default: true},\r\n          //     ]\r\n          //   },\r\n          // }}\r\n        />\r\n\r\n        <Controls\r\n          ref={controlsRef}\r\n          title={currentMetadata.name}\r\n          onSeek={handleSeekChange}\r\n          onSeekMouseDown={handleSeekMouseDown}\r\n          onSeekMouseUp={handleSeekMouseUp}\r\n          onRewind={handleRewind}\r\n          onPlayPause={handlePlayPause}\r\n          onFastForward={handleFastForward}\r\n          playing={playing}\r\n          played={played}\r\n          OffsetSub={subOffset}\r\n          onAddSubtitle={onAddSubtitle}\r\n          elapsedTime={elapsedTime}\r\n          totalDuration={totalDuration}\r\n          onMute={hanldeMute}\r\n          muted={muted}\r\n          onVolumeChange={handleVolumeChange}\r\n          onVolumeSeekDown={handleVolumeSeekDown}\r\n          onChangeDispayFormat={handleDisplayFormat}\r\n          playbackRate={playbackRate}\r\n          onPlaybackRateChange={handlePlaybackRate}\r\n          onAudioTrackChange={handleAudioTrack}\r\n          onToggleFullScreen={toggleFullScreen}\r\n          volume={volume}\r\n          onOffsetSub = {onOffsetSub}\r\n          audioTracks= {Boolean (currentMetadata.audioTracks) ?currentMetadata.audioTracks : []}\r\n        />\r\n      </div>\r\n\r\n        </Modal>\r\n    )\r\n}\r\nexport default VideoPlayer","import React from 'react';\r\n// import Logo from './Logo'\r\n\r\n\r\nconst Header = ()=>{\r\n\r\n    return (\r\n        \r\n        <header className = 'header'>\r\n            <h2>Stream Page</h2>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default Header","import React,{useEffect,useState} from 'react';\r\nimport Video from './Video'\r\nimport VideoPlayerModal from './VideoPlayerModal'\r\nimport axios from 'axios'\r\nimport Header from './Header'\r\n\r\n\r\n\r\n\r\nconst VideosPage = ()=>{\r\n    const [metaData,setMetaData] =  useState([]);\r\n    const [playerOpened,setPlayerOpened] =  useState(false);\r\n    const [currentlyPlaying,setCurrentlyPlaying] = useState('');\r\n    const [currentMetadata,setCurrentMetadata] = useState({});\r\n    useEffect (()=>{\r\n        \r\n        axios.get('video/metadata')\r\n        .then((response)=>{\r\n            if (!response.data.success) {\r\n                console.log(response.data.error);\r\n            }\r\n            \r\n            const sortedData = response.data.metadata.sort(function(a, b) {\r\n                const nameA = a.name.toUpperCase();\r\n                const nameB = b.name.toUpperCase();\r\n                if (nameA < nameB) {\r\n                  return -1;\r\n                }\r\n                if (nameA > nameB) {\r\n                  return 1;\r\n                }\r\n                return 0;\r\n              })\r\n              console.log(response.data);\r\n              console.log(response);\r\n            setMetaData(sortedData)\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err) \r\n    })\r\n\r\n    },[])\r\n    \r\n    const videoClicked = (data)=>{\r\n        const T = metaData.find(element => element.name === data)\r\n        // console.log(T );\r\n        setCurrentMetadata({...T})\r\n        setCurrentlyPlaying(encodeURIComponent(data))\r\n        setPlayerOpened(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Header/>\r\n        <div className = \"videosGrid\">\r\n            {\r\n                metaData.map((meta,index)=>{\r\n                    return (\r\n                        <Video onClicked = {videoClicked} key = {index} metadata = {meta}/>\r\n                        )\r\n                })\r\n            }\r\n            <VideoPlayerModal opened = {playerOpened} setOpened = {setPlayerOpened} currentlyPlaying={currentlyPlaying} currentMetadata={currentMetadata} /> \r\n        </div>   \r\n        </>    \r\n    )\r\n    \r\n}\r\n\r\nexport default VideosPage","import React from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst AuthPage = ({setAuthed})=>{\r\n    \r\n\r\n    const onFormSubmit = (e)=> {\r\n        e.preventDefault()\r\n\r\n        axios.post('/auth',{passworrd:e.target[0].value}).then((data)=>{\r\n            if (data.data) {\r\n                setAuthed(true)\r\n            }else{\r\n                alert('Wrong Password')\r\n            }\r\n        }).catch(()=>{\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = 'authContainer' >\r\n             \r\n             <form onSubmit = {onFormSubmit} >\r\n             <h1>Password</h1>\r\n             <input type = 'text'/>\r\n             <button>Confirm</button>\r\n             </form>\r\n\r\n        </div> \r\n    )\r\n}\r\nexport default AuthPage","import React,{useState,useEffect} from 'react';\r\n// import VideosPage from '../components/VideosPage'\r\nimport VideosPage from '../components/VideosPage'\r\nimport AuthPage from '../components/AuthPage'\r\nimport axios from 'axios';\r\n\r\nconst App = ()=>{\r\n    \r\n    const [authed,setAuthed] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        axios.post('/auth',{password:''}).then((data)=>{\r\n\r\n            setAuthed(data.data)\r\n        }).catch((err)=>{\r\n\r\n        })\r\n\r\n    },[])\r\n    return (\r\n        <>\r\n        {\r\n            authed ? \r\n            <VideosPage/>\r\n            :\r\n            <AuthPage setAuthed= {setAuthed}/>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './router/AppRouter'\nimport './index.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <AppRouter/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}